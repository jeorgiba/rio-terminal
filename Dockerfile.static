# Simplified Dockerfile for static site deployment
# 
# Credits: Based on Rio Terminal by Raphael Amorim
# Original project: https://github.com/raphamorim/rio
# Author: Raphael Amorim <rapha850@gmail.com>
# License: MIT

FROM rust:1.80-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    curl \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install WASM tools
RUN rustup target add wasm32-unknown-unknown
RUN cargo install wasm-bindgen-cli

# Set working directory
WORKDIR /app

# Copy the entire project
COPY . .

# Build the WASM frontend
WORKDIR /app/frontends/wasm
RUN cargo build --target wasm32-unknown-unknown --release --lib

# Generate JavaScript bindings
RUN wasm-bindgen ../../target/wasm32-unknown-unknown/release/rioterm_wasm.wasm \
    --out-dir . \
    --target web \
    --no-typescript

# Production stage - serve static files
FROM nginx:alpine

# Copy built WASM files and HTML
COPY --from=builder /app/frontends/wasm /usr/share/nginx/html

# Create nginx configuration optimized for WASM and WebGPU
RUN cat > /etc/nginx/nginx.conf << 'EOF'
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Add WASM MIME type
    types {
        application/wasm wasm;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Required headers for WebGPU and SharedArrayBuffer
        add_header Cross-Origin-Embedder-Policy require-corp always;
        add_header Cross-Origin-Opener-Policy same-origin always;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        
        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_types
            application/wasm
            application/javascript
            text/css
            text/html
            text/plain
            application/json;
        
        root /usr/share/nginx/html;
        index index.html;
        
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Cache WASM files aggressively
        location ~* \.(wasm)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Cross-Origin-Embedder-Policy require-corp always;
            add_header Cross-Origin-Opener-Policy same-origin always;
        }
        
        # Cache JS files
        location ~* \.(js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
EOF

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
